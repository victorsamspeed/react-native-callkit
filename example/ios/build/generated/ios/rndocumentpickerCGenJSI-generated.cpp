/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleCpp.js
 */

#include "rndocumentpickerCGenJSI.h"

namespace facebook::react {

static jsi::Value __hostFunction_NativeDocumentPickerCxxSpecJSI_pick(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeDocumentPickerCxxSpecJSI *>(&turboModule)->pick(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
}
static jsi::Value __hostFunction_NativeDocumentPickerCxxSpecJSI_saveDocument(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeDocumentPickerCxxSpecJSI *>(&turboModule)->saveDocument(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
}
static jsi::Value __hostFunction_NativeDocumentPickerCxxSpecJSI_writeDocuments(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeDocumentPickerCxxSpecJSI *>(&turboModule)->writeDocuments(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
}
static jsi::Value __hostFunction_NativeDocumentPickerCxxSpecJSI_pickDirectory(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeDocumentPickerCxxSpecJSI *>(&turboModule)->pickDirectory(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
}
static jsi::Value __hostFunction_NativeDocumentPickerCxxSpecJSI_keepLocalCopy(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeDocumentPickerCxxSpecJSI *>(&turboModule)->keepLocalCopy(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
}
static jsi::Value __hostFunction_NativeDocumentPickerCxxSpecJSI_isKnownType(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeDocumentPickerCxxSpecJSI *>(&turboModule)->isKnownType(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asString(rt)
  );
}
static jsi::Value __hostFunction_NativeDocumentPickerCxxSpecJSI_releaseSecureAccess(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeDocumentPickerCxxSpecJSI *>(&turboModule)->releaseSecureAccess(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt).asArray(rt)
  );
}
static jsi::Value __hostFunction_NativeDocumentPickerCxxSpecJSI_releaseLongTermAccess(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeDocumentPickerCxxSpecJSI *>(&turboModule)->releaseLongTermAccess(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt).asArray(rt)
  );
}

NativeDocumentPickerCxxSpecJSI::NativeDocumentPickerCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
  : TurboModule("RNDocumentPicker", jsInvoker) {
  methodMap_["pick"] = MethodMetadata {1, __hostFunction_NativeDocumentPickerCxxSpecJSI_pick};
  methodMap_["saveDocument"] = MethodMetadata {1, __hostFunction_NativeDocumentPickerCxxSpecJSI_saveDocument};
  methodMap_["writeDocuments"] = MethodMetadata {1, __hostFunction_NativeDocumentPickerCxxSpecJSI_writeDocuments};
  methodMap_["pickDirectory"] = MethodMetadata {1, __hostFunction_NativeDocumentPickerCxxSpecJSI_pickDirectory};
  methodMap_["keepLocalCopy"] = MethodMetadata {1, __hostFunction_NativeDocumentPickerCxxSpecJSI_keepLocalCopy};
  methodMap_["isKnownType"] = MethodMetadata {2, __hostFunction_NativeDocumentPickerCxxSpecJSI_isKnownType};
  methodMap_["releaseSecureAccess"] = MethodMetadata {1, __hostFunction_NativeDocumentPickerCxxSpecJSI_releaseSecureAccess};
  methodMap_["releaseLongTermAccess"] = MethodMetadata {1, __hostFunction_NativeDocumentPickerCxxSpecJSI_releaseLongTermAccess};
}


} // namespace facebook::react

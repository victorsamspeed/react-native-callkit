/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleObjCpp
 *
 * We create an umbrella header (and corresponding implementation) here since
 * Cxx compilation in BUCK has a limitation: source-code producing genrule()s
 * must have a single output. More files => more genrule()s => slower builds.
 */

#import "RNCImageEditorSpec.h"


@implementation NativeRNCImageEditorSpecBase


- (void)setEventEmitterCallback:(EventEmitterCallbackWrapper *)eventEmitterCallbackWrapper
{
  _eventEmitterCallback = std::move(eventEmitterCallbackWrapper->_eventEmitterCallback);
}
@end

@implementation RCTCxxConvert (NativeRNCImageEditor_SpecCropImageCropDataOffset)
+ (RCTManagedPointer *)JS_NativeRNCImageEditor_SpecCropImageCropDataOffset:(id)json
{
  return facebook::react::managedPointer<JS::NativeRNCImageEditor::SpecCropImageCropDataOffset>(json);
}
@end
@implementation RCTCxxConvert (NativeRNCImageEditor_SpecCropImageCropDataSize)
+ (RCTManagedPointer *)JS_NativeRNCImageEditor_SpecCropImageCropDataSize:(id)json
{
  return facebook::react::managedPointer<JS::NativeRNCImageEditor::SpecCropImageCropDataSize>(json);
}
@end
@implementation RCTCxxConvert (NativeRNCImageEditor_SpecCropImageCropDataDisplaySize)
+ (RCTManagedPointer *)JS_NativeRNCImageEditor_SpecCropImageCropDataDisplaySize:(id)json
{
  return facebook::react::managedPointer<JS::NativeRNCImageEditor::SpecCropImageCropDataDisplaySize>(json);
}
@end
@implementation RCTCxxConvert (NativeRNCImageEditor_SpecCropImageCropData)
+ (RCTManagedPointer *)JS_NativeRNCImageEditor_SpecCropImageCropData:(id)json
{
  return facebook::react::managedPointer<JS::NativeRNCImageEditor::SpecCropImageCropData>(json);
}
@end
namespace facebook::react {
  
    static facebook::jsi::Value __hostFunction_NativeRNCImageEditorSpecJSI_cropImage(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "cropImage", @selector(cropImage:cropData:resolve:reject:), args, count);
    }

  NativeRNCImageEditorSpecJSI::NativeRNCImageEditorSpecJSI(const ObjCTurboModule::InitParams &params)
    : ObjCTurboModule(params) {
      
        methodMap_["cropImage"] = MethodMetadata {2, __hostFunction_NativeRNCImageEditorSpecJSI_cropImage};
        setMethodArgConversionSelector(@"cropImage", 1, @"JS_NativeRNCImageEditor_SpecCropImageCropData:");
  }
} // namespace facebook::react

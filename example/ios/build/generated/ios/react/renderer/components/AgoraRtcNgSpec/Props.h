
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GeneratePropsH.js
 */
#pragma once

#include <react/renderer/components/view/ViewProps.h>
#include <react/renderer/core/PropsParserContext.h>
#include <react/renderer/core/propsConversions.h>
#include <vector>

namespace facebook::react {

struct AgoraRtcSurfaceViewCallApiStruct {
  std::string funcName{};
  std::string params{};
  std::vector<std::string> buffers{};
};

static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, AgoraRtcSurfaceViewCallApiStruct &result) {
  auto map = (std::unordered_map<std::string, RawValue>)value;

  auto tmp_funcName = map.find("funcName");
  if (tmp_funcName != map.end()) {
    fromRawValue(context, tmp_funcName->second, result.funcName);
  }
  auto tmp_params = map.find("params");
  if (tmp_params != map.end()) {
    fromRawValue(context, tmp_params->second, result.params);
  }
  auto tmp_buffers = map.find("buffers");
  if (tmp_buffers != map.end()) {
    fromRawValue(context, tmp_buffers->second, result.buffers);
  }
}

static inline std::string toString(const AgoraRtcSurfaceViewCallApiStruct &value) {
  return "[Object AgoraRtcSurfaceViewCallApiStruct]";
}
class AgoraRtcSurfaceViewProps final : public ViewProps {
 public:
  AgoraRtcSurfaceViewProps() = default;
  AgoraRtcSurfaceViewProps(const PropsParserContext& context, const AgoraRtcSurfaceViewProps &sourceProps, const RawProps &rawProps);

#pragma mark - Props

  AgoraRtcSurfaceViewCallApiStruct callApi{};
  bool zOrderOnTop{false};
  bool zOrderMediaOverlay{false};
};

struct AgoraRtcTextureViewCallApiStruct {
  std::string funcName{};
  std::string params{};
  std::vector<std::string> buffers{};
};

static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, AgoraRtcTextureViewCallApiStruct &result) {
  auto map = (std::unordered_map<std::string, RawValue>)value;

  auto tmp_funcName = map.find("funcName");
  if (tmp_funcName != map.end()) {
    fromRawValue(context, tmp_funcName->second, result.funcName);
  }
  auto tmp_params = map.find("params");
  if (tmp_params != map.end()) {
    fromRawValue(context, tmp_params->second, result.params);
  }
  auto tmp_buffers = map.find("buffers");
  if (tmp_buffers != map.end()) {
    fromRawValue(context, tmp_buffers->second, result.buffers);
  }
}

static inline std::string toString(const AgoraRtcTextureViewCallApiStruct &value) {
  return "[Object AgoraRtcTextureViewCallApiStruct]";
}
class AgoraRtcTextureViewProps final : public ViewProps {
 public:
  AgoraRtcTextureViewProps() = default;
  AgoraRtcTextureViewProps(const PropsParserContext& context, const AgoraRtcTextureViewProps &sourceProps, const RawProps &rawProps);

#pragma mark - Props

  AgoraRtcTextureViewCallApiStruct callApi{};
};

} // namespace facebook::react
